{
    "openapi": "3.0.0",
    "info": {
        "title": "First_proj",
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "login",
                "operationId": "8dcb70df1020986038d098cc08d05dae",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "Tom@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vZmlyc3RfcHJvai50ZXN0L2FwaS9hdXRoL2xvZ2luIiwiaWF0IjoxNzI0MzEyMDY4LCJleHAiOjE3MjQzOTg0NjgsIm5iZiI6MTcyNDMxMjA2OCwianRpIjoiTE1KbFZlakVzVERzZUYwOCIsInN1YiI6IjMiLCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.IqfkCQhq0JjIDzO2TBHR7vuGLmQpL_QiAtuTyQl6mKA"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 86400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/auth/me": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "me",
                "operationId": "b9abb1a7a74670a19c215c2c133f14d8",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Tom"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "Tom@gmail.com"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2024-08-15T07:05:58.000000Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2024-08-15T07:05:58.000000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/auth/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "refresh token",
                "operationId": "b2eae7a8032954d25b46c7ec6f489c68",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vZmlyc3RfcHJvai50ZXN0L2FwaS9hdXRoL2xvZ2luIiwiaWF0IjoxNzI0MzEyMDY4LCJleHAiOjE3MjQzOTg0NjgsIm5iZiI6MTcyNDMxMjA2OCwianRpIjoiTE1KbFZlakVzVERzZUYwOCIsInN1YiI6IjMiLCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.IqfkCQhq0JjIDzO2TBHR7vuGLmQpL_QiAtuTyQl6mKA"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 86400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/dishes": {
            "get": {
                "tags": [
                    "Dishes"
                ],
                "summary": "Get a list of dihes",
                "operationId": "a3afb7523a60be3d3607f478f6fce930",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "NUmber of elements on page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Filter by title",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Borsch"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Filter by description",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Very tasty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Borsch"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Very tasty"
                                                    },
                                                    "price": {
                                                        "type": "integer",
                                                        "example": "Very tasty"
                                                    },
                                                    "recipe": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "qty": {
                                                                    "type": "integer",
                                                                    "example": 5
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "example": [
                                                            {
                                                                "id": 1,
                                                                "qty": 5
                                                            },
                                                            {
                                                                "id": 2,
                                                                "qty": 3
                                                            }
                                                        ]
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2024-08-15T08:55:40.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2024-08-15T08:55:40.000000Z"
                                                    },
                                                    "order_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagintaion": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 23
                                                },
                                                "perPage": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "currentPage": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "lastPage": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Dishes"
                ],
                "summary": "Create new Dishes",
                "description": "Returns dishes data",
                "operationId": "createDishes",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Dumpling Craft"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Dumplings are a broad class of dishes that consist of pieces of dough wrapped around a filling, or of dough with no filling."
                                    },
                                    "recipe": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "qty": {
                                                    "type": "integer",
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": [
                                            {
                                                "id": 1,
                                                "qty": 5
                                            },
                                            {
                                                "id": 2,
                                                "qty": 3
                                            }
                                        ]
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": 100
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "title": {
                                            "type": "string",
                                            "example": "Dumpling Craft"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Dumplings are a broad class of dishes that consist of pieces of dough wrapped around a filling, or of dough with no filling."
                                        },
                                        "price": {
                                            "type": "integer",
                                            "example": 100
                                        },
                                        "recipe": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "qty": {
                                                        "type": "integer",
                                                        "example": 5
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "example": [
                                                {
                                                    "id": 1,
                                                    "qty": 5
                                                },
                                                {
                                                    "id": 2,
                                                    "qty": 3
                                                }
                                            ]
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2024-08-21T13:40:26.000000Z"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2024-08-21T13:40:26.000000Z"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 22
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/dishes/{id}": {
            "get": {
                "tags": [
                    "Dishes"
                ],
                "summary": "Get a specific dishes",
                "description": "Returns dishes data",
                "operationId": "getDishesByID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Dishes's id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "": {
                                            "title": "title",
                                            "type": "string",
                                            "example": "Borsch"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Very tasty"
                                        },
                                        "price": {
                                            "type": "string",
                                            "example": "100"
                                        },
                                        "recipe": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "qty": {
                                                        "type": "integer",
                                                        "example": 5
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "example": [
                                                {
                                                    "id": 1,
                                                    "qty": 5
                                                },
                                                {
                                                    "id": 2,
                                                    "qty": 3
                                                }
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2024-08-15T08:55:40.000000Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2024-08-15T08:55:40.000000Z"
                                        },
                                        "order_id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/dishes/update/{id}": {
            "patch": {
                "tags": [
                    "Dishes"
                ],
                "summary": "Update the Dishes",
                "description": "Returns dishes data",
                "operationId": "updateDishes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Dishes's id",
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Dumpling Craft"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Dumplings are a broad class of dishes that consist of pieces of dough wrapped around a filling, or of dough with no filling."
                                    },
                                    "recipe": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "qty": {
                                                    "type": "integer",
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": [
                                            {
                                                "id": 1,
                                                "qty": 5
                                            },
                                            {
                                                "id": 2,
                                                "qty": 3
                                            }
                                        ]
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": 100
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Dumpling Craft"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Dumplings are a broad class of dishes that consist of pieces of dough wrapped around a filling, or of dough with no filling."
                                        },
                                        "price": {
                                            "type": "integer",
                                            "example": 100
                                        },
                                        "recipe": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "qty": {
                                                        "type": "integer",
                                                        "example": 5
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "example": [
                                                {
                                                    "id": 1,
                                                    "qty": 5
                                                },
                                                {
                                                    "id": 2,
                                                    "qty": 3
                                                }
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2024-08-21T13:40:26.000000Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2024-08-21T13:40:26.000000Z"
                                        },
                                        "order_id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/dishes/delete/{id}": {
            "delete": {
                "tags": [
                    "Dishes"
                ],
                "summary": "Delete the Dishes",
                "description": "Returns response",
                "operationId": "deleteDishes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Dishes's id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dish was removed"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/dishes/addDishToOrder/{id}": {
            "post": {
                "tags": [
                    "Dishes"
                ],
                "summary": "add dishes to order",
                "description": "Returns dishes data",
                "operationId": "addDishToOrder",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Dumpling Craft"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Dumplings are a broad class of dishes that consist of pieces of dough wrapped around a filling, or of dough with no filling."
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": 100
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "title": {
                                            "type": "string",
                                            "example": "Dumpling Craft"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Dumplings are a broad class of dishes that consist of pieces of dough wrapped around a filling, or of dough with no filling."
                                        },
                                        "price": {
                                            "type": "integer",
                                            "example": 100
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2024-08-21T13:40:26.000000Z"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2024-08-21T13:40:26.000000Z"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 22
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/media/dishes/{id}": {
            "get": {
                "tags": [
                    "Dishes"
                ],
                "summary": "Get media from specific dishes",
                "operationId": "getMediaForDishes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Dishes's id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 22
                                            },
                                            "gallery_id": {
                                                "type": "integer",
                                                "example": 4
                                            },
                                            "filename": {
                                                "type": "string",
                                                "example": "Screenshot from 2024-08-14 16-17-34.png"
                                            },
                                            "mime_type": {
                                                "type": "string",
                                                "example": "image/png"
                                            },
                                            "size": {
                                                "type": "integer",
                                                "example": 23423
                                            },
                                            "url": {
                                                "type": "string",
                                                "example": "/storage/uploads/RJaDG2plFAlZM4KOYvEdLrsrVCrmfoIGYWf64sLG.png"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "example": "2024-08-21T13:40:26.000000Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "example": "2024-08-21T13:40:26.000000Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Dishes"
                ],
                "summary": "Create Media for dishes",
                "operationId": "createMediaForDishes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Dishes's id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file1": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "file2": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Media uploaded successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/menu/restaurants/{id}": {
            "get": {
                "tags": [
                    "Menu"
                ],
                "summary": "Get menu for specific restaurant",
                "operationId": "503f021e7af6ce33c7e428ec9442811a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Restaurant's id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Dishes"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/menu/restaurant/{id}": {
            "post": {
                "tags": [
                    "Menu"
                ],
                "summary": "Create menu for a specific restaurant",
                "operationId": "97a6d560b3522692466ed007a7808ba8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Restaurant's id",
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "dishes": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Dishes"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/menu/delete/{id}": {
            "delete": {
                "tags": [
                    "Menu"
                ],
                "summary": "Delete the Menu",
                "description": "Returns message about operation",
                "operationId": "deleteMenu",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Menu's id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Menu has been deleted"
                    },
                    "400": {
                        "description": "Ivalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get a list of orders",
                "operationId": "8f47a9426ae97d027ea15932882365c8",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of elements on page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Filter by id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "18"
                        }
                    },
                    {
                        "name": "payment_method",
                        "in": "query",
                        "description": "Filter by payment_method",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "cash"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "1"
                                                    },
                                                    "total_price": {
                                                        "type": "string",
                                                        "example": "700"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2024-08-15T08:55:40.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2024-08-15T08:55:40.000000Z"
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 3
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagintaion": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 23
                                                },
                                                "perPage": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "currentPage": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "lastPage": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create new Order",
                "description": "Returns Order data",
                "operationId": "createOrder",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "payment_method": {
                                        "type": "string",
                                        "example": "cash"
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "total_price": {
                                        "type": "boolean",
                                        "example": 1000
                                    },
                                    "orders": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "qty": {
                                                    "type": "integer",
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": [
                                            {
                                                "id": 1,
                                                "qty": 5
                                            },
                                            {
                                                "id": 2,
                                                "qty": 3
                                            }
                                        ]
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": 100
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user_id": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "total_price": {
                                            "type": "integer",
                                            "example": 600
                                        },
                                        "payment_method": {
                                            "type": "string",
                                            "example": "cash"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2024-08-21T13:40:26.000000Z"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2024-08-21T13:40:26.000000Z"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 36
                                        },
                                        "dishes": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Borsch"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Very tasty"
                                                    },
                                                    "price": {
                                                        "type": "integer",
                                                        "example": 100
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2024-08-21T13:40:26.000000Z"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2024-08-21T13:40:26.000000Z"
                                                    },
                                                    "order_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "example": {
                                                "id": 1,
                                                "title": "Borsch",
                                                "description": "Very tasty",
                                                "price": 100,
                                                "created_at": "2024-08-15T07:02:21.000000Z",
                                                "updated_at": "2024-08-15T07:02:21.000000Z",
                                                "order_id": 1
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get a specific order",
                "description": "Returns order data",
                "operationId": "getOrderByID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User's id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 28
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "total_price": {
                                            "type": "string",
                                            "example": "700"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2024-08-15T08:55:40.000000Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2024-08-15T08:55:40.000000Z"
                                        },
                                        "user_id": {
                                            "type": "integer",
                                            "example": 3
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/orders/update/{id}": {
            "patch": {
                "tags": [
                    "Orders"
                ],
                "summary": "update order by id",
                "description": "Returns Order data",
                "operationId": "updateOrderById",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "payment_method": {
                                        "type": "string",
                                        "example": "cash"
                                    },
                                    "total_price": {
                                        "type": "boolean",
                                        "example": 1000
                                    },
                                    "dishes": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "qty": {
                                                    "type": "integer",
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": [
                                            {
                                                "id": 1,
                                                "qty": 5
                                            },
                                            {
                                                "id": 2,
                                                "qty": 3
                                            }
                                        ]
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": 100
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user_id": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "total_price": {
                                            "type": "integer",
                                            "example": 600
                                        },
                                        "payment_method": {
                                            "type": "string",
                                            "example": "cash"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2024-08-21T13:40:26.000000Z"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2024-08-21T13:40:26.000000Z"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 36
                                        },
                                        "dishes": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Borsch"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Very tasty"
                                                    },
                                                    "price": {
                                                        "type": "integer",
                                                        "example": 100
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2024-08-21T13:40:26.000000Z"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2024-08-21T13:40:26.000000Z"
                                                    },
                                                    "order_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "example": {
                                                "id": 1,
                                                "title": "Borsch",
                                                "description": "Very tasty",
                                                "price": 100,
                                                "created_at": "2024-08-15T07:02:21.000000Z",
                                                "updated_at": "2024-08-15T07:02:21.000000Z",
                                                "order_id": 1
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/orders/delete/{id}": {
            "delete": {
                "tags": [
                    "Orders"
                ],
                "summary": "Delete the Order",
                "description": "Returns response",
                "operationId": "deleteOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order's id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order was removed"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/restaurants": {
            "get": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "Get a list of restaurants",
                "operationId": "2f995b8db474e63c60fccf4e231ff654",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "NUmber of elements on page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by name",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Asador Etxebarri"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Filter by country",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "France"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Asador Etxebarri"
                                                    },
                                                    "country": {
                                                        "type": "string",
                                                        "example": "France"
                                                    },
                                                    "latitude": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 50.42297
                                                    },
                                                    "longitude": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 30.24416
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2024-08-15T08:55:40.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2024-08-15T08:55:40.000000Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagintaion": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 23
                                                },
                                                "perPage": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "currentPage": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "lastPage": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "Create new Restaurant",
                "description": "Returns Restaurant data",
                "operationId": "createRestaurant",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Diverxo"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "France"
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50.59067
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 30.71773
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "Diverxo"
                                        },
                                        "country": {
                                            "type": "string",
                                            "example": "France"
                                        },
                                        "latitude": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 50.59067
                                        },
                                        "longitude": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 30.71773
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2024-08-21T13:40:26.000000Z"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2024-08-21T13:40:26.000000Z"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 22
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/restaurants/nearestRestaurant": {
            "get": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "Get the nearest Restaurant",
                "description": "Returns Restaurant data, distance, country",
                "operationId": "getTheNearestRestaurant",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50.59067
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 30.71773
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "restaurant": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Asador Etxebarri"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "example": "France"
                                                },
                                                "latitude": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 50.42297
                                                },
                                                "longitude": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 30.24416
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-16T08:30:15.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-16T08:30:15.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "distance": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 20.328845035909904
                                        },
                                        "country": {
                                            "type": "string",
                                            "example": "France"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/restaurants/update/{id}": {
            "patch": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "Update specific Restaurant",
                "description": "Returns Restaurant data",
                "operationId": "updateRestaurant",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Restaurant's id",
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Diverxo"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "France"
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50.59067
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 30.71773
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 22
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Diverxo"
                                        },
                                        "country": {
                                            "type": "string",
                                            "example": "France"
                                        },
                                        "latitude": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 50.59067
                                        },
                                        "longitude": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 30.71773
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2024-08-21T13:40:26.000000Z"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2024-08-21T13:40:26.000000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/restaurants/delete/{id}": {
            "delete": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "Delete the Restaurant",
                "description": "Returns message about operation",
                "operationId": "deleteRestaurant",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Restaurant's id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restaurant was removed"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a list of users",
                "operationId": "4db02f0d9ccd97469981e0cb03d1a41e",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "NUmber of elements on page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by name",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Tom"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Filter by email",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "gmail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Tom"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "Tom@gmail.com"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2024-08-15T08:55:40.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2024-08-15T08:55:40.000000Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagintaion": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 23
                                                },
                                                "perPage": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "currentPage": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "lastPage": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create new User",
                "description": "Returns user data",
                "operationId": "createUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Tom Cruise"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "tom@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "Tom Cruise"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "tom@gmail.com"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "tom@2024-08-21T12:42:33.000000Z.com"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "tom@2024-08-21T12:42:33.000000Z.com"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a specific user",
                "description": "Returns user data",
                "operationId": "getUserByID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User's id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Tom Cruise"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "tom@gmail.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/users/update/{id}": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Update specific User",
                "description": "Returns user data",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User's id",
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Tom Cruise"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "tom@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Tom Cruise"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "tom@gmail.com"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "tom@2024-08-21T12:42:33.000000Z.com"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "tom@2024-08-21T12:42:33.000000Z.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/users/delete/{id}": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete the User",
                "description": "Returns response",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User's id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User was removed"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/users/check_role/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a specific user role",
                "description": "message with user role",
                "operationId": "checkUserRoleByID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User's id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User role is waiter"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/users/role_manager": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Edit user role to manager",
                "description": "Returns message with user new role",
                "operationId": "editUserRoleToManager",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role has been changed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/users/role_customer": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Edit user role to customer",
                "description": "Returns message with user new role",
                "operationId": "editUserRoleToCustomer",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role has been changed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/users/role_waiter": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Edit user role to waiter",
                "description": "Returns message with user new role",
                "operationId": "editUserRoleToWaiter",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role has been changed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/users/role_chef": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Edit user role to chef",
                "description": "Returns message with user new role",
                "operationId": "editUserRoleToChef",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role has been changed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/media/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get media from specific user",
                "operationId": "getMediaForUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User's id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 22
                                            },
                                            "gallery_id": {
                                                "type": "integer",
                                                "example": 4
                                            },
                                            "filename": {
                                                "type": "string",
                                                "example": "Screenshot from 2024-08-14 16-17-34.png"
                                            },
                                            "mime_type": {
                                                "type": "string",
                                                "example": "image/png"
                                            },
                                            "size": {
                                                "type": "integer",
                                                "example": 23423
                                            },
                                            "url": {
                                                "type": "string",
                                                "example": "/storage/uploads/RJaDG2plFAlZM4KOYvEdLrsrVCrmfoIGYWf64sLG.png"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "example": "2024-08-21T13:40:26.000000Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "example": "2024-08-21T13:40:26.000000Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create Media for users",
                "operationId": "createMediaForUsers",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User's id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file1": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "file2": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Media uploaded successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Dishes": {
                "title": "Dishes",
                "properties": {
                    "id": {
                        "description": "Dishes ID",
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "description": "title of dishes",
                        "type": "string",
                        "example": "Borsch"
                    },
                    "description": {
                        "description": "Dishes description",
                        "type": "string",
                        "example": "Very tasty"
                    },
                    "price": {
                        "description": "Dishes price",
                        "type": "integer",
                        "example": 100
                    },
                    "recipe": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "qty": {
                                    "type": "integer",
                                    "example": 5
                                }
                            },
                            "type": "object"
                        },
                        "example": [
                            {
                                "id": 1,
                                "qty": 5
                            },
                            {
                                "id": 2,
                                "qty": 3
                            }
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2024-08-15T08:55:40.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2024-08-15T08:55:40.000000Z"
                    },
                    "order_id": {
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "400": {
                "description": "Invalid input"
            },
            "500": {
                "description": "Internal server error"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Dishes",
            "description": "Dishes"
        },
        {
            "name": "Menu",
            "description": "Menu"
        },
        {
            "name": "Orders",
            "description": "Orders"
        },
        {
            "name": "Restaurants",
            "description": "Restaurants"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}